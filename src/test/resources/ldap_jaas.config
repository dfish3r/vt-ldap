vt-ldap {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier{foo=test}"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{trustCertificates=classpath:/ed.trust.crt}";
};

vt-ldap-ssl {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="${ldapSslTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    ssl="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.SingletonTLSSocketFactory{edu.vt.middleware.ldap.ssl.X509CredentialConfig{{trustCertificates=file:target/test-classes/ed.trust.crt}}}";
};

vt-ldap-authz {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    tls="true"
    ldapProvider="edu.vt.middleware.ldap.provider.jndi.JndiProvider"
    authenticationHandler="edu.vt.middleware.ldap.auth.BindAuthenticationHandler"
    dnResolver="edu.vt.middleware.ldap.auth.SearchDnResolver{{baseDn=ou=test,dc=vt,dc=edu}{userFilter=(mail=jtyler@vt.edu)}}"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    setLdapDnPrincipal="true"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    authorizationFilter="(uid={1})"
    authorizationFilterArgs="10"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{trustCertificates=file:target/test-classes/ed.trust.crt}";
};

vt-ldap-random {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="ldap://ed-dne.middleware.vt.edu ${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    ldapProvider="edu.vt.middleware.ldap.provider.jndi.JndiProvider"
    connectionStrategy="RANDOM"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    setLdapDnPrincipal="true"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{trustCertificates=file:target/test-classes/ed.trust.crt}";
};

vt-ldap-filter {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="ldap://ed-dne.middleware.vt.edu ${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    ldapProvider="edu.vt.middleware.ldap.provider.jndi.JndiProvider"
    connectionStrategy="ACTIVE_PASSIVE"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier{foo=test,bar=false}"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    allowMultipleDns="true"
    authorizationFilter="(uid={1})"
    authorizationFilterArgs="10"
    userFilter="(&(mail={0})(objectClass={1}))"
    userFilterArgs="person"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-handler {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    authorizationHandlers="edu.vt.middleware.ldap.auth.TestAuthorizationHandler"
    userFilter="(&(mail={0})(objectClass={1}))"
    userFilterArgs="person"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-roles {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule optional
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(mail={1})"
    roleAttribute="objectClass"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-roles-recursive {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(member={0})"
    roleAttribute="uugid"
    ldapResultHandlers="edu.vt.middleware.ldap.handler.RecursiveResultHandler{{searchAttribute=member}{mergeAttributes=uugid}}"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-use-first {
  edu.vt.middleware.ldap.jaas.TestLoginModule required;
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    defaultRole="test-role1,test-role2"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-try-first {
  edu.vt.middleware.ldap.jaas.TestLoginModule required;
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    tryFirstPass="true"
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule optional
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(mail={1})"
    roleAttribute="objectClass"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-sufficient {
  edu.vt.middleware.ldap.jaas.LdapLoginModule sufficient
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    authorizationFilter="(departmentNumber=0000)"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
  edu.vt.middleware.ldap.jaas.LdapLoginModule sufficient
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    authorizationFilter="(departmentNumber=0830)"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-roles-only {
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(uid=10)"
    roleAttribute="departmentNumber,objectClass"
    principalGroupName="Principals"
    roleGroupName="Roles"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-dn-roles-only {
  edu.vt.middleware.ldap.jaas.LdapDnAuthorizationModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(mail={0})"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(mail={1})"
    roleAttribute="departmentNumber,objectClass"
    principalGroupName="Principals"
    roleGroupName="Roles"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-roles-only-pooled {
  edu.vt.middleware.ldap.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    roleFilter="(uid=10)"
    roleAttribute="departmentNumber,objectClass"
    principalGroupName="Principals"
    roleGroupName="Roles"
    roleResolver="edu.vt.middleware.ldap.jaas.PooledSearchRoleResolver"
    cacheId="vt-ldap-roles-only-pooled"
    sslSocketFactory="edu.vt.middleware.ldap.ssl.TLSSocketFactory{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-pooled-dnr {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    baseDn="ou=test,dc=vt,dc=edu"
    tls="true"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    userFilter="(&(mail={0})(objectClass={1}))"
    userFilterArgs="person"
    dnResolver="edu.vt.middleware.ldap.auth.PooledSearchDnResolver"
    authenticationHandler="edu.vt.middleware.ldap.auth.PooledBindAuthenticationHandler"
    cacheId="vt-ldap-pooled-dnr"
    sslSocketFactory="{edu.vt.middleware.ldap.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ed.truststore} {trustStoreType=BKS}}}";
};

vt-ldap-pooled-dnr-spring {
  edu.vt.middleware.ldap.jaas.LdapLoginModule required
    authenticatorFactory="edu.vt.middleware.ldap.jaas.SpringAuthenticatorFactory";
};

vt-ldap-props {
  edu.vt.middleware.ldap.jaas.PropsLoginModule required
    ldapProvider="edu.vt.middleware.ldap.provider.jndi.JndiProvider"
    ldapUrl="${ldapTestHost}"
    bindDn="uid=1,ou=test,dc=vt,dc=edu"
    bindCredential="VKSxXwlU7YssGl1foLMH2mGMWkifbODb1djfJ4t2"
    timeout="8000"
    tls="true"
    java.naming.authoritative="true"
    baseDn="ou=test,dc=vt,dc=edu"
    searchScope="OBJECT"
    timeLimit="5000"
    binaryAttributes="jpegPhoto"
    operationRetry="7"
    operationRetryWait="2000"
    operationRetryBackoff="3"
    ldapResultHandlers="edu.vt.middleware.ldap.handler.RecursiveResultHandler{{searchAttribute=member}{mergeAttributes=mail,department}},edu.vt.middleware.ldap.handler.MergeResultHandler{ }"
    searchIgnoreResultCodes="SIZE_LIMIT_EXCEEDED,PARTIAL_RESULTS"
    authenticationHandler="edu.vt.middleware.ldap.auth.CompareAuthenticationHandler"
    dnResolver="edu.vt.middleware.ldap.auth.PooledSearchDnResolver"
    hostnameVerifier="edu.vt.middleware.ldap.AnyHostnameVerifier"
    setLdapDnPrincipal="true"
    authorizationFilter="(uid={1})"
    authorizationFilterArgs="10"
    userFilter="(mail={0})"
    userRoleAttribute="departmentNumber"
    sslSocketFactory="{trustCertificates=file:target/test-classes/ed.trust.crt}";
};

com.sun.security.jgss.initiate {
  com.sun.security.auth.module.Krb5LoginModule required
    doNotPrompt="true"
    debug="true"
    principal="test3"
    useKeyTab="true"
    keyTab="target/test-classes/krb5.keytab";
};

